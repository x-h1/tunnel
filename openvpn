#!/bin/bash
GITHUB_CMD="https://tunnel-e7c.pages.dev"
export DEBIAN_FRONTEND=noninteractive
OS=$(uname -m)
ipsaya=$(wget -qO- ipinfo.io/ip)
domain=$(cat /etc/xray/domain)
input_domain="s/xxxxxxxxx/$domain/g"
interface=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)
mkdir -p /usr/lib/openvpn/
mkdir -p /var/www/html/
mkdir -p /var/www/html/user/
apt install -y tmux 
echo 'port 1194
proto tcp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh.pem
verify-client-cert none
username-as-common-name
plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
push "route-method exe"
push "route-delay 2"
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
management 127.0.0.1 5555
status server-tcp.log
log log-tcp.log
verb 3
ncp-disable
cipher none
auth none' >/etc/openvpn/server-tcp.conf

echo 'port 2200
proto udp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh.pem
verify-client-cert none
username-as-common-name
plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 20.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
push "route-method exe"
push "route-delay 2"
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status server-udp.log
log log-udp.log
verb 3
ncp-disable
cipher none
auth none' >/etc/openvpn/server-udp.conf

cat >/etc/openvpn/tcp.ovpn <<-END
auth-user-pass
client
dev tun
proto tcp
remote xxxxxxxxx 1194
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
END

cat >/etc/openvpn/udp.ovpn <<-END
auth-user-pass
client
dev tun
proto udp
remote xxxxxxxxx 2200
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
END

cat >/etc/openvpn/ssl.ovpn <<-END
auth-user-pass
client
dev tun
proto tcp
remote xxxxxxxxx 443
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
END

cat >/etc/openvpn/ws-ssl.ovpn <<-END
auth-user-pass
client
dev tun
proto tcp
remote xxxxxxxxx 443
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
END

function cert_ovpn() {
    wget --no-check-certificate -O /etc/openvpn/server.crt "${GITHUB_CMD}/OpenVPN/server.crt" >>/dev/null 2>&1
    wget --no-check-certificate -O /etc/openvpn/server.key "${GITHUB_CMD}/OpenVPN/server.key" >>/dev/null 2>&1
    wget --no-check-certificate -O /etc/openvpn/ca.crt "${GITHUB_CMD}/OpenVPN/ca.crt" >>/dev/null 2>&1
    wget --no-check-certificate -O /etc/openvpn/dh.pem "${GITHUB_CMD}/OpenVPN/dh.pem" >>/dev/null 2>&1
    wget --no-check-certificate -O /var/www/html/index.html "${GITHUB_CMD}/OpenVPN/index.html" >>/dev/null 2>&1
}
cert_ovpn

function input_cert_ovpn() {
    echo '<ca>' >>/etc/openvpn/tcp.ovpn
    cat /etc/openvpn/ca.crt >>/etc/openvpn/tcp.ovpn
    echo '</ca>' >>/etc/openvpn/tcp.ovpn
    cp /etc/openvpn/tcp.ovpn /var/www/html/tcp.ovpn

    echo '<ca>' >>/etc/openvpn/udp.ovpn
    cat /etc/openvpn/ca.crt >>/etc/openvpn/udp.ovpn
    echo '</ca>' >>/etc/openvpn/udp.ovpn
    cp /etc/openvpn/udp.ovpn /var/www/html/udp.ovpn

    echo '<ca>' >>/etc/openvpn/ws-ssl.ovpn
    cat /etc/openvpn/ca.crt >>/etc/openvpn/ws-ssl.ovpn
    echo '</ca>' >>/etc/openvpn/ws-ssl.ovpn
    cp /etc/openvpn/ws-ssl.ovpn /var/www/html/ws-ssl.ovpn

    echo '<ca>' >>/etc/openvpn/ssl.ovpn
    cat /etc/openvpn/ca.crt >>/etc/openvpn/ssl.ovpn
    echo '</ca>' >>/etc/openvpn/ssl.ovpn
    cp /etc/openvpn/ssl.ovpn /var/www/html/ssl.ovpn
    cd /var/www/html/
    zip all-ovpn.zip tcp.ovpn udp.ovpn ssl.ovpn ws-ssl.ovpn >/dev/null 2>&1
    sed -i 's/#AUTOSTART="all"/AUTOSTART="all"/g' /etc/default/openvpn
    cd
}



systemctl daemon-reload
service openvpn restart
systemctl enable openvpn@server-tcp
systemctl start openvpn@server-tcp
systemctl enable openvpn@server-udp
systemctl start openvpn@server-udp
systemctl restart openvpn@server-tcp
systemctl restart openvpn@server-udp
sed -i $input_domain /etc/openvpn/tcp.ovpn
sed -i $input_domain /etc/openvpn/udp.ovpn
sed -i $input_domain /etc/openvpn/ssl.ovpn
sed -i $input_domain /etc/openvpn/ws-ssl.ovpn
sed -i $input_domain /var/www/html/index.html
input_cert_ovpn
